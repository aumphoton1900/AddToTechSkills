// 7. Given a String, find the first non-repeated character in it using Stream
	// functions?
	public static void eg01() {
		String input = "Java articles are Awesome";

		Character result = input.chars() // Stream of String
				.mapToObj(s -> Character.toLowerCase(Character.valueOf((char) s))) // First convert to Character object
																					// and then to lowercase
				.collect(Collectors.groupingBy(Function.identity(), LinkedHashMap::new, Collectors.counting())) // Store
																												// the
																												// chars
																												// in
																												// map
																												// with
																												// count
				.entrySet().stream().filter(entry -> entry.getValue() == 1L).map(entry -> entry.getKey()).findFirst()
				.get();
		System.out.println(result);

		/* or can also try using */

		input.chars().mapToObj(c -> (char) c).filter(ch -> input.indexOf(ch) == input.lastIndexOf(ch)).findFirst()
				.orElse(null);
	}




	
	//8. Given a String, find the first repeated character in it using Stream functions?
	public static void eg_02() {
		String input = "Java Articles are Awesome";

		Character result = input.chars() // Stream of String
				.mapToObj(s -> Character.toLowerCase(Character.valueOf((char) s))) // First convert to Character object
																					// and then to lowercase
				.collect(Collectors.groupingBy(Function.identity(), LinkedHashMap::new, Collectors.counting())) // Store
																												// the
																												// chars
																												// in
																												// map
																												// with
																												// count
				.entrySet().stream().filter(entry -> entry.getValue() > 1L).map(entry -> entry.getKey()).findFirst()
				.get();
		System.out.println(result);

		/* or can also try */

		Set<Character> seenCharacters = new HashSet<>();

		input.chars().mapToObj(c -> (char) c).filter(c -> !seenCharacters.add(c)).findFirst().orElse(null);
	}

9.
List<Integer> numbers = Arrays.asList(10, 20, 50, 40, 30);
int nthLargest = numbers.stream()
    .sorted(Comparator.reverseOrder())
    .skip(2)
    .findFirst()
    .orElseThrow();
System.out.println(nthLargest); // Output: 30

10.
26. Find the Most Frequent Character in a String
Question: Find the most frequent character in a string.

String input = "success";
char mostFrequent = input.chars()
    .mapToObj(c -> (char) c)
    .collect(Collectors.groupingBy(c -> c, Collectors.counting()))
    .entrySet().stream()
    .max(Map.Entry.comparingByValue())
    .map(Map.Entry::getKey)
    .orElseThrow();
System.out.println(mostFrequent); // Output: s

