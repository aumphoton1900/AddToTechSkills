Q1 : given string find all repeating character and their frequency ?  

 
import java.util.stream.Collectors;
import java.util.*;

class Main {
    public static void main(String[] args) {
        String s =" ram ram ram mahesh";
        Map<Character, Long> characterCount = s.chars()
                .mapToObj(c -> (char) c)
                .collect(Collectors.groupingBy(x -> x , Collectors.counting()));

        // Print the result
        characterCount.forEach((character, count) -> 
            System.out.println(character + " : " + count));
        System.out.println("Try programiz.pro");
    }
}

Q2 : static Collector<CharSequence,?,String>

joining()
Returns a Collector that concatenates the input elements into a String, in encounter order.
static Collector<CharSequence,?,String>

joining(CharSequence delimiter)
Returns a Collector that concatenates the input elements, separated by the specified delimiter, in encounter order.
static Collector<CharSequence,?,String>

joining(CharSequence delimiter, CharSequence prefix, CharSequence suffix)
Returns a Collector that concatenates the input elements, separated by the specified delimiter, with the specified prefix and suffix, in encounter order.


Collectros.joining example -02 
           // List of strings
        List<String> names = Arrays.asList("Alice", "Bob", "Charlie");
          // Using Collectors.joining() without delimiter
        String result1 = names.stream().collect(Collectors.joining());
        System.out.println("Joined without delimiter: " + result1);

Q3 : Serializable example ?

import java.util.stream.Collectors;
import java.util.*;

import java.io.*;

// Step 1: Create a class that implements Serializable
class Student implements Serializable {
    private static final long serialVersionUID = 1L; // Recommended for Serializable classes
    String name;
    int age;

    // Constructor
    public Student(String name, int age) {
        this.name = name;
        this.age = age;
    }

    // Display method
    public void display() {
        System.out.println("Name: " + name + ", Age: " + age);
    }
}




class Main {
    
        public static void main(String[] args) {
        // Serialization
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream("student.ser"))) {
            Student student = new Student("John Doe", 20);
            oos.writeObject(student); // Serialize the object
            System.out.println("Serialization complete.");
        } catch (IOException e) {
            e.printStackTrace();
        }

        // Deserialization
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream("student.ser"))) {
            Student deserializedStudent = (Student) ois.readObject(); // Deserialize the object
            System.out.println("Deserialization complete.");
            deserializedStudent.display();
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
    }
       // System.out.println("Try programiz.pro");
    //}
}

Serialization complete.
Deserialization complete.
Name: John Doe, Age: 20


